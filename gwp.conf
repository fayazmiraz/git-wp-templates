#!/bin/bash
#
#

## #########################################################################
# ######################### MUST READ BEFORE EDIT #########################
# #########################################################################
# Don't edit this files directly, future updates may replace this file
# without asking your permission.
# 
# Instead, add local configuration files in git_wp_config directory.
# 
# Multiple configuration files are allowed and they will be added in
# alpha-numeric order
# #########################################################################


# ---- ROOT directory, typically this is the /REPO/.git/hooks directory
if [[ -z "$SCRIPT_ROOT" ]]; then
    SCRIPT_ROOT=$( cd "$(dirname "$0")"; PWD -P )
fi


# ---- Local config files
LOCAL_CONFIG_DIR="gwp.d"
while read local_config
do
    if [[ -f "$local_config" ]]; then
        source "$local_config"

        if [[ $? -ne 0 ]]; then
            echo " " 1>&2
            echo "Error in local config file: [$local_config]! Aborting program." 1>&2
            echo " " 1>&2
            exit 1
        fi
    fi
done <<< $( find "${SCRIPT_ROOT}/${LOCAL_CONFIG_DIR}"/* 2>/dev/null )


# ---- DB config
# @note: DB info will be populated from WP_CONFIG ( as defined in path
# section below ) if any one of DB_NAME, WP_DB_USER & WP_DB_PASS is empty
# DB_NAME=""
# WP_DB_USER=""
# WP_DB_PASS=""


# ---- Repository Config
# get dev/hub/live config from: git config gitWPTemplate.name
GWP_TEMPLATE=$(git config gitWPTemplate.name)
# caution: case sensitivity in repo name may create problem in different OS.
if [[ -z "$DEV_REPO" ]]; then
    DEV_REPO="dev"
fi
if [[ -z "$LIVE_REPO" ]]; then
    LIVE_REPO="live"
fi
if [[ -z "$HUB_REPO" ]]; then
    HUB_REPO="origin"
fi
if [[ -z "$CUR_REPO" ]]; then
    if [[ -z "$GWP_TEMPLATE" ]]; then
        # couldn't determine in which repo we are, neither from user config files nor from git config
        echo " " 1>&2
        echo "$BASH_SOURCE: $LINENO Error, can't determine current repo! Aborting program." 1>&2
        echo " " 1>&2
        exit 1
    fi
    if [[ "live" == "$GWP_TEMPLATE" ]]; then
        CUR_REPO="$LIVE_REPO"
    elif [[ "hub" == "$GWP_TEMPLATE" ]]; then
        # in hub we'll mainly deal with live repo
        CUR_REPO="$LIVE_REPO"
    else
        CUR_REPO="$DEV_REPO"
    fi
fi

# ---- Branch Config
if [[ -z "$DEV_BRANCH" ]]; then
    DEV_BRANCH="master"
fi
if [[ -z "$HUB_BRANCH" ]]; then
    HUB_BRANCH="master"
fi
if [[ -z "$LIVE_BRANCH" ]]; then
    LIVE_BRANCH="production"
fi

if [[ "$CUR_REPO" == "$LIVE_REPO" || "$CUR_REPO" == "$HUB_REPO" ]]; then
    ACTIVE_BRANCH="$LIVE_BRANCH"
    PULL_BRANCH="$HUB_BRANCH"
    PUSH_BRANCH="$LIVE_BRANCH"
else
    ACTIVE_BRANCH="$DEV_BRANCH"
    PULL_BRANCH="$LIVE_BRANCH"
    PUSH_BRANCH="$HUB_BRANCH"
fi

# suffix of pre sync branch
if [[ -z "$PRE_SYNC_BRANCH_SUFFIX" ]]; then
    PRE_SYNC_BRANCH_SUFFIX="pre-sync"
fi

# generally in this model we'll not have too many repo that'll push to remote origin, so it's ok to have
# different pre sync repo for each repo. It's easy to fall back / backup / track changes that way
if [[ -z "$PRE_SYNC_BRANCH" ]]; then
    PRE_SYNC_BRANCH="${CUR_REPO}_${PRE_SYNC_BRANCH_SUFFIX}"
fi


# ---- FILE & Path Config
if [[ -z "$FUNCTION_DIR" ]]; then
    FUNCTION_DIR="${SCRIPT_ROOT}/gwp"
fi
# root path of the repository
if [[ -z "$REPO_PATH" ]]; then
    if [[ -z "$GWP_TEMPLATE" ]]; then
        # couldn't determine in which repo we are, neither from user config files nor from git config
        echo " " 1>&2
        echo "$BASH_SOURCE: $LINENO Error, can't determine Repo PATH! Aborting program." 1>&2
        echo " " 1>&2
        exit 1
    fi
    if [[ "dev" == "$GWP_TEMPLATE" || "live" == "$GWP_TEMPLATE" ]]; then
        REPO_PATH=$(git rev-parse --show-toplevel)
    else
        # cannot really get REPO_PATH of live from hub. Must set this from local config
        echo " " 1>&2
        echo "$BASH_SOURCE: $LINENO Error, can't set Live Repo PATH from Hub!" 1>&2
        echo "Please set REPO_PATH as the path to the live repo in a config file within gwp.d" 1>&2
        echo " " 1>&2
        exit 1
    fi
    
fi
# path to wp-config.php
if [[ -z "$WP_CONFIG" ]]; then
    WP_CONFIG="${REPO_PATH}/wp-config.php"    
fi
# Sync command log file & dir. This can't be ignored in .gitignore
# Every eommiting repo should have a unique file for this to avoid
# possible unnecessary conflict. For example, dev repo has dev-sync.txt
# live has live-sync.txt, another dv2 has dv2-sync.txt etc.
if [[ -z "$SYNC_LOG_PATH" ]]; then
    SYNC_LOG_PATH="${REPO_PATH}/sync"
fi
if [[ -z "$SYNC_LOG_SUFFIX" ]]; then
    SYNC_LOG_SUFFIX="-sync.txt"
fi
if [[ -z "$SYNC_LOG_FILE" ]]; then
    SYNC_LOG_FILE="${SYNC_LOG_PATH}/${CUR_REPO}${SYNC_LOG_SUFFIX}"
fi
# path to DB dump files
if [[ -z "$DB_PATH" ]]; then
    DB_PATH="${REPO_PATH}/db"
fi



# ---- Common Generated Variables
if [[ -z "$CUR_TIME" ]]; then
    CUR_TIME=$( date -u +"@TIME %Y-%m-%d %H:%M:%S GMT" )
fi
if [[ -z "$PROG_NAME" ]]; then
    PROG_NAME=$( basename $0 )
fi
# currently checked out branch
CUR_BRANCH=$(git symbolic-ref --short HEAD)